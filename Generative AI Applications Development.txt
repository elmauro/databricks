Generative AI Application Development

Defining Compound AI System

	An AI system that has multiple interacting components


RAG is just a Simple AI System
	Composed of a single taskk
	
	Compound AI System
		A system using multiple interacting components
		multiple calls to models, retrievers, or external tools
		
		Query --> Prompt	--> LLM
		Retrive domain specific context --> Prompt	--> LLM
		
	
Real - word Prompts Have Multiple Intents
	objective
	
	problem:
		Single objective with multiple intents
		An intent consist of one to many tasks
		Some task typically depends on ech other (Translation -> Summarize)
		

Tasks in Compound AI Systems

LLMs can complete a huge array of challenging tasks.

	Typical applications are more than just a prompt - response system

	Example task: Single interaction with an LLM (e.g. query a SQL database, search web for _)
	
	chain: Applications with more than a single interaction

	Direct LLM calls are just part of a full task/application pipeline)
	
	
	Summarize and Sentiment
		Example multi-LLM problem: Get the sentiment of many articles on a topic
		
		Initial Solution: Put all the articles together and have the LLM parse it
			Issue: Can quickly overwhelm the model input length
		
		Better solution: A two-stage process to first summarize, then perform sentiment analysis
		
		
Designing Compound AI Systems
	Analysis
	Design
	Development
	Production
	Monitoring
	
Intent Classification

	Identify Intents: define possible intents and dependencies (sequential or parallel tasks)

	Identify Tools: What tools do you need to accomplish a task, web search, API interaction, Code execution, Text-to-speech. speech to text service, etc.

	Build the chain: Build a workflow based on identified tasks, What architecture is needed (RAG, Text2SQL, etc. Iterate the process as needed.


Design A Compound AI System

This design is independent of the framework or language model to be used
	
	question --> Compound_rag_app_class --> answer
	
	Compound_rag_app_class:
		run_search()	--> run_augmented - run_summary()	--> run_get_context()	--> run_qa()

		run_search()
			Databricks VectorSearch (Data Serving)
			
		run_augmented - run_summary()
			Summary LLM (Model Serving)
			
		run_qa()
			QA LLM (Model Serving)
			

Building Multi - Stage Reasoning Chains
	
	Introduction to Multi-stage Reasoning Chains
	
	Map your Mindset

		Composition frameworks: help to manage multi - stage reasoning systems

		LongChain: is one of the most popular framework and has Databricks integrations
		
		
		Retrieval			--> Tool
		Tasks				--> Order of tools
		Question + Answers	--> Intent + Route
		Metadata			-->	Parameters for Route
		Generation			-->	Reasoning
		
	Designing of AI Systems
		Building compound AI systems requires new tools
		
		Composition framework are becoming popular
		
		Popular composition libraries
			LangChain
				Software framework designed to help create Gen AI Applications
				
				Prompt
				Chain
				Retriever
				Tool
			
			LlamaIndex
				Data framework that enhances the capabilities of LLMs by structuring and indexing data to make it easily consumable.

				Models
				Prompts
				Indexing and storing
				Querying
				Agents
			
			Haystack
				Open-Sourc python framework for building custom applications with LLMs, focusing on document retrieval, text generation, and summarization.

				Generators
				Retrievers
				Document Stores
				Pipelines
			
			DSPy
				Framework for programming with LLMs and retrieval models (RMs)

				Signatures
				Teleprompters
				Automatic Compiler
		
		Popular agent libraries
			LangChain - agents
			AutoGPT
		
	
	Choosing a Library
		Library features
		Performance and Scalability
		Stability and Complexity
		
		
Databricks Products for Building Multi-stage Reasoning Systems

	Fundational Model API
		Features
			Instant Access
			Pricing Model: pay-per-token
			Users can integrate external models (Azure OpenAI GPT, AWS Bedrock Models)
			Unified interface
			
		Some of the supported models and tasks
			DBRX instruct			--> chat
				Databricks open source LLM
				DBRX Base pretrained model
				DBRX Instruct fined-tuned model
			
			Meta Llama 3 8/70B		--> chat
			Llama 2 70B				--> chat
			Mixtral-8x7B Instruct	--> chat
			BGE Large (English)		--> Embedding
			
			
	Vector Search
		Vector database that is built into the Databricks Intelligence Platform
			Stores vector representation of your data, plus metadata
			
			Integrated with your Lakehouse
			
			Scalable, low latency with zero operational overhead
			
			Supports ACLs using Unity Catalog integration
			
			API for real-time similarity search
				Query with filters on metadata
				REST API and Python client
				
	Other Databricks Products
		MLflow Tracking			--> Logging chains and pipelines
		Model Serving			-->	Serving customs chains and pipelines
		MLflow Evaluation		-->	Computing and managing evaluations metrics
		Lakehouse Monitoring	-->	Monitoring the performance of deployed chains and pipelines


Introduction to Agents and Cognitive Architectures
	
	What is an Agent?
		Agents does research, writes first draft, another models checks the draft

		An Agent is an application that can executes complex tasks by using a language model to define a sequence of actions to take
		
		Agents replace hard-coded sequences of actions with query-dependent sequences chosen dynamically by LLMs
		
		
	Core components
		Task
			Request through prompt to ve solved
			
		LLM
			Central coordination module that manages the core logic. It is the brain of the agent.
		
		Tools
			External resources that the agent uses to acomplish tasks
		
		Memory and Planning
			Components fr planning and executing the future actions
			
			
	An Example Agent
		Task
			Is it the right time to invest in NVIDIA stock?
			
		Sub-tasks
			Decide wich actions are needed and the order
			What is current stock price?
			What are the latest financials?
			What are the latest news / announcements?
			What is current sentiment score?
			
		Agent Workflow
			Process task
				Agent uses an LLM to understand the request and determine actions to fulfill the task
				
			Collect data
				financials, stock price, latest news articles, etc.
				
			Data Analysis
				Use an LLM to analyze data and sentiments
				
			Output gneration:
				Use an LLM to synthesizes the information into a coherent report
			
			
	How does an agent decide which actions to take?
		
		Agent Reasoning
			Congnitive process to operating within the doamin of AI, analyze information, draw logical conclusions and make desitions autonomously
			
			Independent from the language and framework, there are design patterns for agent reasoning
				ReAct
					Enables models to generate verbal reasoning traces and actions
					
				Main states
					Thought
						Reflect on the problem given and previous action taken
						
					Act
						Chose  the correct tool and input format to use
					
					Observe
						Evaluate the result of the action and generate next thought
				
				Tool Use
					Agents interact with external tools and APIs to perform specific tasks
					
					Agent's resoning skills decides which tools to use and when/how to use them
					
					Exmaple tools
						Research / Search Tools
						Image						
						Document Retrieval
						Coding
				
				Planning
					Agents must be able to dynamically ajust their goals and plans based on changing conditions
					
					Tasks have multiple sub-tasks to be orchestrated carefully
					
					Tasks can be single tasks, sequential tasks, graph tasks
				
				Multi-agent Collaboration
					Several agents working collaboretively, each handling differents aspects of the task
					
					We can define agents specialized in solving specific problems
					
					Each agent can use the same or different LLMs for their expert task
				
	
	Tools for buiding Agents
		LangChain Agents
			Building agents that can use tools to interact with the world
		
		AutoGPT
			Provides tools to build AI Agents
		
		OpenAI Function Calling
			Model that allow to call one or more functions defined in user query
		
		AutoGen
			Framework that enables applications with multiple agents that can communicate each others
		
		Transformers Agents
			Provides a natural language API for interacting with transformers
			
	
	Multi Modal AI
	
		Applications:
			Models with inputs or outputs that include data types beyond text
		
			Common data types include image, audio, and video
		
		Architectures
			Multi-Modal Retrieval
			
			Multi-Modal Generator
				Multi-Modal LLMs (GPT-4V(ision)). Allow to generate a story with images
		
		


Give a resume of the content in spanish

Complete with databricks course definitions in an easy coloquial language to understand, simple samples, focus on the unity that the resume is

The resume should be easy to understand the content and prepare for a databricks certification 
